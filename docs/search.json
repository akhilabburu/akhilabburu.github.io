[
  {
    "objectID": "projects/news.html",
    "href": "projects/news.html",
    "title": "Front Pages",
    "section": "",
    "text": "←  →"
  },
  {
    "objectID": "projects/cricket.html",
    "href": "projects/cricket.html",
    "title": "Cricket",
    "section": "",
    "text": "old ipl project. Lots of suboptimal decisions date:2022-04-17 rendered: 2025-03-31\nCode\n# Load necessary libraries\n# Using suppressPackageStartupMessages to keep output clean\nsuppressPackageStartupMessages({\n  library(ggtext)\n  library(lme4)\n  library(tidyverse)\n  library(plotly)\n  library(viridisLite) # For better color scales\n})"
  },
  {
    "objectID": "projects/cricket.html#load-the-final-cleaned-up-data",
    "href": "projects/cricket.html#load-the-final-cleaned-up-data",
    "title": "Cricket",
    "section": "Load the final cleaned up data",
    "text": "Load the final cleaned up data\n\n\nCode\n#final_df &lt;- read.csv(\"final_df.csv\")\nfinal_df &lt;- nanoparquet::read_parquet(\"cricket/final_df.parquet\")\n\n\nList of all teams that have played IPL so far\n\n\nCode\n(team_list &lt;- final_df %&gt;%\n  distinct(team))\n\n\n# A data frame: 19 × 1\n   team                       \n   &lt;chr&gt;                      \n 1 Royal Challengers Bangalore\n 2 Kings XI Punjab            \n 3 Delhi Daredevils           \n 4 Kolkata Knight Riders      \n 5 Mumbai Indians             \n 6 Rajasthan Royals           \n 7 Deccan Chargers            \n 8 Chennai Super Kings        \n 9 Kochi Tuskers Kerala       \n10 Pune Warriors              \n11 Sunrisers Hyderabad        \n12 Gujarat Lions              \n13 Rising Pune Supergiants    \n14 Rising Pune Supergiant     \n15 Delhi Capitals             \n16 Punjab Kings               \n17 Lucknow Super Giants       \n18 Gujarat Titans             \n19 Royal Challengers Bengaluru"
  },
  {
    "objectID": "projects/cricket.html#exploring-the-data",
    "href": "projects/cricket.html#exploring-the-data",
    "title": "Cricket",
    "section": "Exploring the Data",
    "text": "Exploring the Data\nLets start by making a function that gives some basic details about any given team\n\n\nCode\nteam_stat &lt;- function(team_name) {\n\nf1 &lt;- final_df %&gt;% #_team_select\n    group_by(season.x) %&gt;%\n    arrange(desc(match_id)) %&gt;%\n    filter(grepl(team_name, team, ignore.case = T) |\n             grepl(team_name, team2, ignore.case = T))\n\nf2 &lt;- distinct(.data = f1, match_id) %&gt;% count() #match count\n\nf3 &lt;- filter(f1, grepl(team_name, winner, ignore.case = T)) %&gt;%#winning matches\n    distinct(match_id) %&gt;% count()\n\nf4 &lt;- filter(f1, grepl(team_name, winner, ignore.case = T))\n\ndf &lt;- inner_join(f2, f3, by = \"season.x\") %&gt;%\n  rename(matches = n.x, wins = n.y) %&gt;%\n  mutate(win_rate = round(wins/matches * 100))\n\n\ndf$team &lt;- f4[1,36] # add a new column with the team name\ndf &lt;- df %&gt;% unnest(last_col()) %&gt;% \n  rename(team = last_col()) %&gt;% #rename the column\n  ungroup() #ungroup the df\n\nreturn(df)\n\n}\n\n\nThis particular function takes regex input\n\n\nCode\nteam_stat(\"hyd\")\n\n\n# A tibble: 12 × 5\n   season.x matches  wins win_rate team               \n      &lt;dbl&gt;   &lt;int&gt; &lt;int&gt;    &lt;dbl&gt; &lt;chr&gt;              \n 1     2013      17     9       53 Sunrisers Hyderabad\n 2     2014      14     6       43 Sunrisers Hyderabad\n 3     2015      14     7       50 Sunrisers Hyderabad\n 4     2016      17    11       65 Sunrisers Hyderabad\n 5     2017      14     8       57 Sunrisers Hyderabad\n 6     2018      17    10       59 Sunrisers Hyderabad\n 7     2019      15     6       40 Sunrisers Hyderabad\n 8     2020      16     8       50 Sunrisers Hyderabad\n 9     2021      14     3       21 Sunrisers Hyderabad\n10     2022      14     6       43 Sunrisers Hyderabad\n11     2023      14     4       29 Sunrisers Hyderabad\n12     2024      16     9       56 Sunrisers Hyderabad\n\n\n\n\nCode\nteam_stat(\"delhi\")\n\n\n# A tibble: 17 × 5\n   season.x matches  wins win_rate team          \n      &lt;dbl&gt;   &lt;int&gt; &lt;int&gt;    &lt;dbl&gt; &lt;chr&gt;         \n 1     2008      14     7       50 Delhi Capitals\n 2     2009      15     9       60 Delhi Capitals\n 3     2010      14     7       50 Delhi Capitals\n 4     2011      14     4       29 Delhi Capitals\n 5     2012      18    11       61 Delhi Capitals\n 6     2013      16     3       19 Delhi Capitals\n 7     2014      14     2       14 Delhi Capitals\n 8     2015      14     5       36 Delhi Capitals\n 9     2016      14     7       50 Delhi Capitals\n10     2017      14     6       43 Delhi Capitals\n11     2018      14     5       36 Delhi Capitals\n12     2019      16     9       56 Delhi Capitals\n13     2020      17     8       47 Delhi Capitals\n14     2021      16     9       56 Delhi Capitals\n15     2022      14     7       50 Delhi Capitals\n16     2023      14     5       36 Delhi Capitals\n17     2024      14     7       50 Delhi Capitals\n\n\nCode\nteam_stat(\"giants\") #vs\n\n\n# A tibble: 4 × 5\n  season.x matches  wins win_rate team                \n     &lt;dbl&gt;   &lt;int&gt; &lt;int&gt;    &lt;dbl&gt; &lt;chr&gt;               \n1     2016      14     5       36 Lucknow Super Giants\n2     2022      15     9       60 Lucknow Super Giants\n3     2023      15     8       53 Lucknow Super Giants\n4     2024      14     7       50 Lucknow Super Giants\n\n\nCode\nteam_stat(\"giant$\")\n\n\n# A tibble: 1 × 5\n  season.x matches  wins win_rate team                  \n     &lt;dbl&gt;   &lt;int&gt; &lt;int&gt;    &lt;dbl&gt; &lt;chr&gt;                 \n1     2017      16    10       62 Rising Pune Supergiant"
  },
  {
    "objectID": "projects/cricket.html#how-did-any-single-team-perform-over-the-years",
    "href": "projects/cricket.html#how-did-any-single-team-perform-over-the-years",
    "title": "Cricket",
    "section": "How did any single team perform over the years?",
    "text": "How did any single team perform over the years?\n\n\nCode\nplot_team &lt;- function(x3){\np1 &lt;- team_stat(x3)\nggplot(p1, aes(x = as.factor(season.x), y = win_rate, group = 1)) +\n  geom_point() +\n  geom_line() +\n  scale_y_continuous(limits = c(0, 100))+\n  labs(\n    x = \"Season\",\n    y = \"Win Rate\",\n    title = paste(first(p1[1,5]), \"over the years\")) #grabs the name of the team\n}\n\n\nPerformance of SRH(DC) over the years\n\n\nCode\nplot_team(\"hyd|deccan\") %&gt;% ggplotly()\n\n\n\n\n\n\nDelhi\n\n\nCode\nplot_team(\"delhi\") %&gt;% ggplotly()\n\n\n\n\n\n\nPerformance of all the teams over the years\n\n\nCode\nteam_list2 &lt;- team_list %&gt;% filter(!grepl(\"X\", team)) # Remove KXIPunjab\n\nd2 &lt;- NULL # create a empty df for stats of all teams\nfor (i in 1:nrow(team_list2)) {\n  d1 &lt;- team_stat(word(team_list2$team[i], 1))\n  d2 &lt;- bind_rows(d2,d1)\n}\n\np4 &lt;- ggplot(d2, aes(x = season.x, y = win_rate, group = 1)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(~team)+\n  scale_y_continuous(limits = c(0, 100))+\n  labs(\n    x = \"\",\n    y = \"Win Rate\",\n    title = \"Winning Rate of the teams over the years\")\n\nggplotly(p4)\n\n\n\n\n\n\nWhich team has won the most matches?\n\n\nCode\nfinal_df %&gt;%\n  distinct(match_id,.keep_all = TRUE) %&gt;%\n  count(winner) %&gt;%\n  arrange(desc(n)) %&gt;%\n  head(5) %&gt;%\n  ggplot(aes(x = reorder(winner,desc(n)), y = n))+\n  geom_col()+\n  labs(\n    x = \"Team\",\n    y = \"Number of Wins\")+\n  scale_x_discrete(label = function(x) str_trunc(x, 19))+\n  scale_y_continuous(expand = c(0,0), limits= c(0, 200))\n\n\n\n\n\n\n\n\n\nHow many seasons has the IPL been going on for?\n\n\nCode\nipl_season &lt;- final_df %&gt;%  \n   distinct(season.x)\nipl_season %&gt;% count()\n\n\n# A data frame: 1 × 1\n      n\n  &lt;int&gt;\n1    17\n\n\nLets write a function to get the top-scoring batmen of any given year\n\n\nCode\nhigh_scorer &lt;- function(x = \"\", y = \"\", n = 10){\n# x is a specific year\n# y is a specific player\n# n is the number of results to show\n  y1 &lt;- final_df %&gt;%\n    filter(grepl(x, season.x) & grepl(y, striker, ignore.case = T)) %&gt;%\n    group_by(striker) %&gt;%\n    summarise(runs = sum(runs_off_bat)) %&gt;%\n    arrange(desc(runs)) %&gt;%\n    head(n)\n\n\n  y1 &lt;- y1 %&gt;% mutate(rank = row_number(), year = x) %&gt;%\n    select(3,2,1,4) %&gt;% ungroup()\n\n  #write a loop to generate boundaries, averages etc. for each batsmen?\n\n  bound &lt;- NULL\n  for (i in min(y1$rank):max(y1$rank)) {\n    striker_interest &lt;- y1$striker[i]\n\n    df_interest &lt;- final_df %&gt;% filter(grepl(x, season.x) &\n                                         striker %in% striker_interest)\n\n    sixes &lt;- df_interest %&gt;%\n      group_by(striker) %&gt;%\n      filter(runs_off_bat == 6) %&gt;%\n      count() %&gt;%\n      ungroup() %&gt;%\n      rename(sixes = n)\n\n    fours &lt;- df_interest %&gt;%\n      group_by(striker) %&gt;%\n      filter(runs_off_bat == 4) %&gt;%\n      count() %&gt;%\n      ungroup() %&gt;%\n      rename(fours = n)\n\n    fifties &lt;- df_interest %&gt;%\n      group_by(striker, match_id) %&gt;%\n      summarise(runs = sum(runs_off_bat)) %&gt;%\n      filter(runs &gt;= 50) %&gt;% count() %&gt;% ungroup() %&gt;%\n      rename(fifties = n)\n\n    hundreds &lt;- df_interest %&gt;%\n      group_by(striker, match_id) %&gt;%\n      summarise(runs = sum(runs_off_bat)) %&gt;%\n      filter(runs &gt;= 100) %&gt;% count() %&gt;% ungroup() %&gt;%\n      rename(hundreds = n)\n\n    not_out &lt;- final_df %&gt;% filter(grepl(x, season.x)  &\n                                     (striker %in% striker_interest |\n                                        non_striker %in% striker_interest)) %&gt;%\n      filter(ball &gt;= 19.6) %&gt;%\n      dplyr::distinct(match_id) %&gt;%\n      count() %&gt;%\n      rename(not_out = n) %&gt;%\n      mutate(striker = striker_interest)#number of times not out\n\n    runs &lt;- df_interest %&gt;%\n      summarise(runs = sum(runs_off_bat)) %&gt;%\n      mutate(striker = striker_interest)\n\n    matches &lt;- final_df %&gt;% filter(grepl(x, season.x)  &\n                                     (striker %in% striker_interest |\n                                        non_striker %in% striker_interest)) %&gt;%\n      dplyr::distinct(match_id) %&gt;%\n      count() %&gt;%\n      rename(matches = n) %&gt;%\n      mutate(striker = striker_interest)\n\n    row_df &lt;-  reduce(list(matches, fours, sixes, fifties, hundreds, not_out, runs), left_join, by = 'striker')\n\n    row_df &lt;- row_df %&gt;% mutate(avg = round(runs/(matches - not_out), 2)) %&gt;%\n      select(-runs)\n\n    bound &lt;- bind_rows(bound, row_df)\n\n    bound &lt;- bound %&gt;% replace(is.na(.), 0)\n\n  }\n  y1 &lt;- left_join(bound, y1, by = 'striker')\n\n  y1 &lt;- y1 %&gt;% select(11, 9, 2, 1, everything())\n\n  if (y == \"\") {\n  y1 &lt;- y1 # if there is an empty value, then this changes the rank column\n  } else {\n y1 &lt;- y1 %&gt;% mutate(rank = NA) \n  }\n  \n    if (x &gt;= 2008) {\n  y1 &lt;- y1 # if there is an empty value, then this changes the year column\n  } else {\n y1 &lt;- y1 %&gt;% mutate(year = NA) \n}\n  \n  return(y1)\n}\n\n\nThis function takes year, name of player, and number of entries to return as the input\n\n\nCode\nhigh_scorer(x = 2024, y = , n = 5) # another change in 2025\n\n\n# A data frame: 5 × 11\n   year  rank striker   matches fours sixes fifties hundreds not_out   avg  runs\n  &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;       &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;    &lt;dbl&gt;   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  2024     1 V Kohli        15    62    38       6        1       2  57     741\n2  2024     2 RD Gaikw…      14    58    18       5        1       1  44.8   583\n3  2024     3 R Parag        14    40    33       4        0       2  47.8   573\n4  2024     4 TM Head        15    64    32       5        1       0  37.8   567\n5  2024     5 SV Samson      15    48    24       5        0       2  40.8   531\n\n\nNumber of runs of the top scorers across the years\n\n\nCode\n# hs2 &lt;- NULL\n# for (i in min(ipl_season):max(ipl_season)) {\n#   hs &lt;- high_scorer(x = i)\n#   hs2 &lt;- rbind(hs2,hs)\n# }\n# \n# nanoparquet::write_parquet(hs2, \"cricket/hs2.parquet\")\nhs2 &lt;- nanoparquet::read_parquet(\"cricket/hs2.parquet\")\n\nhs2 %&gt;%\n  filter(year &gt;= 2011) %&gt;%\n  ggplot(aes(x = as.factor(rank),\n             y = runs))+\n  geom_col()+\n  facet_wrap(~year)+\n  labs(\n    x = \"\",\n    y = \"Runs\",\n    title = \"Total runs of the top 10 run scorers over the past seasons\")\n\n\n\n\n\n\n\n\n\nSome players have consistently been in the top-10 over multiple seasons. Though the trend seems to be decreasing. The top five runscorers repeat many times.\n\n\nCode\n(hs_freq &lt;- hs2 %&gt;% filter(year &gt;= 2011) %&gt;%\n    count(striker) %&gt;% arrange(desc(n)) %&gt;% head(5))\n\n\n# A data frame: 5 × 2\n  striker       n\n* &lt;chr&gt;     &lt;int&gt;\n1 V Kohli       9\n2 S Dhawan      8\n3 DA Warner     7\n4 KL Rahul      6\n5 SK Raina      6\n\n\nLet’s visualise this\n\n\nCode\nhs2 %&gt;%\n  left_join(hs_freq, by = \"striker\") %&gt;%\n  mutate(is_hs = ifelse(n &gt; 0, '1', '0')) %&gt;%\n  filter(year &gt;= 2011) %&gt;%\n  ggplot(aes(x = as.factor(rank),\n             y = runs,\n             fill = is_hs))+\n  geom_col()+\n  facet_wrap(~year)+\n  labs(\n    x = \"\",\n    y = \"Runs\",\n    title = \"&lt;b style='color:#f8766d'&gt;Top five&lt;/b&gt; most runscorers\n             perform consistently.\")+\n  theme(plot.title = element_markdown(),\n        legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\nAre first innings runs increasing over the years?\nWe can visualise this by plotting runs in the first innings and matches from the beginning of IPL\n\n\nCode\nfirst_innings_run &lt;- final_df %&gt;%\n  mutate(runs = rowSums(select(.,runs_off_bat,extras), na.rm = TRUE)) %&gt;%\n  group_by(match_id, innings) %&gt;%\n  summarise(total_runs = sum(runs)) %&gt;%\n  filter(innings == 1) %&gt;%\n  left_join(.,final_df,by = 'match_id') %&gt;%\n  distinct(match_id, .keep_all = TRUE) %&gt;%\n  ungroup() %&gt;%\n  mutate(match_no = row_number()) %&gt;%\n  select(match_no, everything())\n\np2 &lt;- first_innings_run %&gt;%\n  ggplot(aes(x = match_no, y = total_runs))+\n  geom_point(aes(color = as.factor(season.x))) +\n  geom_smooth(method = \"lm\")+\n  guides(color = guide_none())+\n  labs(\n    x = \"Matches\",\n    y = \"Number of runs in first innings\",\n    title = \"Noticeable increase in the runs (Hover for more details)\"\n  )\n\nggplotly(p2)"
  },
  {
    "objectID": "projects/cricket.html#what-about-boundaries-4s-and-6s",
    "href": "projects/cricket.html#what-about-boundaries-4s-and-6s",
    "title": "Cricket",
    "section": "What about boundaries (4s and 6s)",
    "text": "What about boundaries (4s and 6s)\n\n\nCode\nboundaries &lt;- final_df %&gt;% \n    group_by(match_id, runs_off_bat) %&gt;% \n    count(runs_off_bat) %&gt;% filter(runs_off_bat == 4 | runs_off_bat == 6 ) %&gt;%\n  ungroup() %&gt;% \n  mutate(match_no = row_number()) %&gt;%\n  select(match_no, everything())\n\np5 &lt;- boundaries %&gt;% \n    inner_join(.,first_innings_run, by = 'match_id') %&gt;% \n    ggplot(aes(x = match_no.y, y = n, color = as.factor(runs_off_bat.x))) +\n    geom_point()+\n    geom_smooth()+\n    labs(\n        x = \"Matches\",\n        y = \"Number of boundaries per match\",\n        title = \"Boundaries and IPL matches\",\n        col = \"4/6\"\n    )\nggplotly(p5)\n\n\n\n\n\n\n\nStats\nA simple linear model for testing for increase in runs over time\n\n\nCode\nlm(total_runs ~ match_no, first_innings_run) %&gt;% summary()\n\n\n\nCall:\nlm(formula = total_runs ~ match_no, data = first_innings_run)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-108.533  -19.091   -0.118   21.021  108.646 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 151.67752    1.87866  80.737   &lt;2e-16 ***\nmatch_no      0.02531    0.00297   8.523   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 31.06 on 1093 degrees of freedom\nMultiple R-squared:  0.06232,   Adjusted R-squared:  0.06146 \nF-statistic: 72.64 on 1 and 1093 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "output.html",
    "href": "output.html",
    "title": "Research Output",
    "section": "",
    "text": "Publications & Conference Proceedings\n\nAbburu, A., Agarwal, S., & Mukherjee, S. (accepted). Heterogeneity in Loss Aversion Estimates across Modeling Approaches. Proceedings of the Annual Meeting of the Cognitive Science Society. | Talk\nAbburu, A., & Mukherjee, S. (2024). Cognitive Science is (largely) Psychological Science. Proceedings of the Annual Meeting of the Cognitive Science Society, 46(0). link | Poster\n\n\n\nPresentations\n\nAbburu, A. (2024, December). LLMs and Ethical Dilemmas: Would AI push you off a boat to save five people? Annual Conference of Cognitive Science 11, Indian Institute of Technology Bombay (IITB). | Poster\nAbburu, A., Agarwal, S., & Mukherjee, S. (2024a). Loss Aversion: Insights from Diverse Estimation Approaches. 2024 Indian Judgment and Decision Making Conference, Indian Institute of Technology (IIT) Mandi. | Talk\nAbburu, A., Agarwal, S., & Mukherjee, S. (2024b, December). Heterogeneity in Loss Aversion Estimates across Modeling Approaches. Annual Conference of Cognitive Science 11, Indian Institute of Technology Bombay (IITB). | Poster\nSingh, P., Ramanathan, P., & Abburu, A. (2023, August 31). Trends in Applied Social Psychology Research across Regions. Symposium on Cross-cultural and Applied Psychology, 27th Regional European Conference of the International Association for Cross-Cultural Psychology, Limerick, Ireland. | Talk\nAbburu, A., & Mukherjee, S. (2022). Top Trends and Topics in JDM: A Bibliometric analysis of the journal Judgment and Decision Making (2008-2021) (Accepted, but not presented). SJDM 2022, San Diego. | Poster\nAbburu, A., Roy, S., Zena, L., Indumathy, J., & Kanth, B. (2021). Investigating Loss of Face and Psychological Distress using Self-Construals. Annual Convention of the National Academy of Psychology. | Talk"
  },
  {
    "objectID": "links/2025-05.html",
    "href": "links/2025-05.html",
    "title": "2025-05",
    "section": "",
    "text": "[science] Death Metal Singers and Vocal Research\n[science] The Color That Wasn’t\nHe might be the only person in the world who has never seen their favorite color.\n[culture] How the last letters of the condemned can teach us how to live\n[nature] The owl man is busy at Boston Logan Airport\n[science] Surgeons bid for medical first: Removing spinal tumor through patient`s eye\n[science] The extreme divers of Korea"
  },
  {
    "objectID": "links/2025-03.html",
    "href": "links/2025-03.html",
    "title": "2025-03",
    "section": "",
    "text": "[space] Astronauts accidentally dropped a tool bag on a spacewalk\n[food] Is there no such thing as Italian cuisine?\nAt a Deluxe Dining Room on the 100th Floor, a Chef Toils in Obscurity\nNew words added in The Oxford English Dictionary (2025)\n[culture] Rembrandt to Picasso: Five ways to spot a fake masterpiece\n[science] Why don’t seals drown?"
  },
  {
    "objectID": "iitd/wip_2025.html",
    "href": "iitd/wip_2025.html",
    "title": "Work in Progress Calendar (2025)",
    "section": "",
    "text": "Download here: wip_2025.ics\n\n\n\n\n\n\nInstructions\n\n\n\n\n\nEasiest: Download it on a phone and tap on it.\nOtherwise, follow this link: https://support.google.com/calendar/answer/37118"
  },
  {
    "objectID": "iitd/wip_2025.html#section",
    "href": "iitd/wip_2025.html#section",
    "title": "Work in Progress Calendar (2025)",
    "section": "",
    "text": "Download here: wip_2025.ics\n\n\n\n\n\n\nInstructions\n\n\n\n\n\nEasiest: Download it on a phone and tap on it.\nOtherwise, follow this link: https://support.google.com/calendar/answer/37118"
  },
  {
    "objectID": "iitd/wifi.html",
    "href": "iitd/wifi.html",
    "title": "Wi-Fi settings on Android 11+",
    "section": "",
    "text": "Some Android versions require a bit of tweaking with the Wi-Fi settings when connecting to IIT Delhi network.\nEAP: PEAP\nPhase 2 auth: MSCHAPV2\nCA certs: Use system certificates\nOnline cert status: Do not verify\nDomain: iitd.ernet.in\nIdentity: &lt; kerberos id &gt; \nPassword: &lt; kerberos pass &gt;"
  },
  {
    "objectID": "iitd/rsta.html",
    "href": "iitd/rsta.html",
    "title": "An unofficial guide to RSTA",
    "section": "",
    "text": "This is an opinionated supplement to the official document. IIT bureaucracy mutates quickly, so consider this your unofficial survival guide. This is obviously neither official nor endorsed.\n\nThings to do, at a high level\n\nBook the visa slot!\nCheck the dates for the next DRC and finish all the departmental-level paperwork.\nApply for NOC and Bonafide once the RSTA is approved at the department.\nTravel and (cancellable) stay arrangements.\nVisa documents and the cover letter.\n…\nProfit\n\n\n\nApplying\n\nNOC and Bona fide are two separate things\nOnce the DRC HoD approves your RSTA, you can send an application to the HOD (via email) asking for these two things.\nThe title of the program should say conference and not a workshop, etc. If it does say workshop, you might have to add additional documents to prove that its a conference.\nThis is how my directory looked like\n\nhss_submit/\n\nex_india.pdf\nleave_duty.pdf\nleave_personal.pdf\nrsta.pdf\nattach/\n\nacceptance.pdf\nconf_website.pdf\ncsir.pdf\ndbt.pdf\n\n\n\nAllow ample time for things at the PG section. They have a tendency to lose things.\n\nTip: IITD has a ‘dak’ system where people ferry documents between the departments. Each document has a number associated with it that you can ‘track’. This also means you can intercept your papers, carry them to the next stop, and get things done.\nFamiliarise yourself with the person responsible for HSS at the PG section.\nIf the invitation letter is not in English, enclose a self-attested Google-translated English version.\n\nThe route goes something like this: HSS Office -&gt; PG Diary & Dispatch -&gt; Dealing Assistant -&gt; Supdt. -&gt; Asst. Registrar (or Sr. Consultant) -&gt; Dean Acad (or Asso. Dean PG Research)\nAt each stage, take photos/copies of each of the documents.\nMake sure all the dates match across the different applications. For example, your leave form and your ex-India leave form.\nFor rejection letters from external funding agencies\n\nThere is a list in the official guide\nAccording to the RSTA form, it is compulsory to show proof of rejection in the PG section. Do not stress too much if you do not receive a response. ‘Sometimes’ they are okay with proof of application.\n\nTimelines: No more than a week at the department after the DRC meeting. About the same duration at the PG section, but if there is no update, go in person to LHC to inquire\n\n\n\n\n\n\n\nEmail template for external agencies\n\n\n\n\n\nDear Sir/Ma’am,\nI am XXX, a full-time PhD student at the Indian Institute of Technology Delhi. My work titled “Super Cool Paper” has recently been accepted for presentation at the international best conference ever to be held in Mars Colony 341 from February 29-30.\nI would be grateful if your institution could support me with travel funding assistance and help facilitate my participation.\nThank you for your consideration.\nSincerely,\nsincere student\nIIT Delhi\n\n\n\n\n\nTickets\n\nUse IRCTC.\nOr the travel desk if you need dummy tickets. Use these at your own risk.\nDates: You are generally reimbursed for tickets even if they are two or three days outside of your conference dates.\n\n\n\nVisa tips\n\nPlan well in advance. All institute documents take longer than they should.\nFor the bank statement, do not get the printout at the bank. They charge extra\n\nPrint out the last 6 months (or whatever the visa requires) elsewhere\nTip: Print each month separately if your balance was too low six months ago.\nThe bank will stamp each page and sign.\n\nThese are some common things that you need have prepared for the visa. Depends on the country!\n\nBank statement\nCover letter\nFlight tickets\nHotel tickets\nIITD Bona fide\nIITD NOC\nIITD RSTA notification\nIITD Ex-India leave\nInsurance\nInvite\nVisa application form\n\nIf you are planning to stay back for some tourism, mention it in the cover letter. They might issue a visa for too short a duration otherwise.\nDo not depend too much on the generosity of ChatGPT; add a human touch.\n\n\n\nForex\n\nYou can pay for things in three ways: cash, debit, and a credit card.\nCash\n\nYou can get foreign currency from Thomas Cook, SBI bank or services like bookmyforex. The travel desk also offers good rates and is relatively hassle-free.\n\nConsiderations when applying for forex cards.\n\nMost credit cards allow forex transactions with a fee.\nConsider applying for cards with zero forex charges. Some examples: Niyo (credit/debit), Scapia (credit).\nYou can also apply for a forex card in many banks (including IIT’s SBI branch) or travel agencies like Thomas Cook.\n\nWhile it’s better to have all three, your destination country should dictate what you rely on the most. A reasonable amount of cash on hand is a must, of course.\nPayment by a card also acts as an additional proof of a payment\nTransit is another factor. In some European countries, one could tap a credit/debit card instead of buying a separate ticket for local transport. Some might even charge an extra fee if you buy a physical ticket.\n\n\n\nPhone\n\nIf your trip is short and your destination country has good public wifi coverage, you might get away with just a roaming pack. Airtel, for instance, has an international roaming pack for 1098 that gives you 3 GB of data for 10 days (along with some minutes).\n\n\n\nBills\n\nAll bills will be verified by the PG section. This means that you need to care for them.\nPreserve all bills in a ziploc bag. Most bills from POS machines are on thermal paper, and they fade out really quickly.\nTake photos/scans of each of the bills, just in case.\n\n\n\nReimbursement\n\nYou’ll have to attach copies of these documents along with the application and the bills. You might wonder why they would need this since they are the ones who approved it. I wonder too.\n\nRSTA approval copy\nEx-India copy\n\nIf possible, attach a letter certifying your attendance at the conference.\nAll the original bills must be submitted to the accounts section through the HSS office.\n\nStaple each day’s bill on a separate A4 sheet\n\nKeep photos/copies for yourself!\n\nMaintain a spreadsheet tallying each day and the total on a single page. Make this as easy to read as possible—it makes the accounts section’s job easier.\n\n\n\n\n\n\n\n\nAn arbitrary format that I came up with\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo.\nCategory\nAmount\nINR\nDate\nBill\n\n\n\n\n1.x\nTravel to conf.\nAmount\nConverted amount\nDD-MM-YYYY\nY/N\n\n\n1.1\nFlight\n\n\n\n\n\n\n1.2\nTrain\n\n\n\n\n\n\n2\nConference fee\n\n\n\n\n\n\n3.x\nVisa etc.\n\n\n\n\n\n\n3.1\nVFS\n\n\n\n\n\n\n3.2\nInsurance\n\n\n\n\n\n\n4.x\nAccommodation\n\n\n\n\n\n\n4.1\nHotel 1\n\n\n\n\n\n\n4.2\nDorm 1\n\n\n\n\n\n\n5.x\nLocal transport\n\n\n\n\n\n\n5.1\nCab 1\n\n\n\n\n\n\n5.2\nTrain 2\n\n\n\n\n\n\n6.x\nFood & Beverages\n\n\n\n\n\n\n6.1\nBreakfast\n\n\n\n\n\n\n6.2\nLunch"
  },
  {
    "objectID": "iitd/booklet_generator.html",
    "href": "iitd/booklet_generator.html",
    "title": "Abstract booklet generator",
    "section": "",
    "text": "Link to repo: https://github.com/akhilabburu/abstract-booklet-generator"
  },
  {
    "objectID": "iitd/convert_entry.html",
    "href": "iitd/convert_entry.html",
    "title": "Convert Kerberos to entry number (and vice versa)",
    "section": "",
    "text": "Intro\nA student in IITD is identified by two similar looking numbers:\n\nAn entry number in the format of: 2020ABC1234\nA Kerberos id in the format of: abc201234\n\nThe problem comes when different systems of IIT, like ERP and Moodle, don’t use the same. These differences mean that its not straightforward to copy-paste data across the systems. Matching it manually is not really feasible for large classes.\nThankfully these two formats are easily broken down into components.\nEntry number: YYYY + program code + id\nKerberos: program code + YY + id\n\n\nExcel file\nThese patterns also mean that the two are freely convertible to each other with some excel manipulation. You can download this excel file to convert one from another. Or, use the formulas given here.\n\n\nFormulas\nConvert an entry number in cell A2 to Kerberos id format:\n=CONCAT(LOWER(MID(A2,5,3)), MID(A2,3,2), RIGHT(A2,4))\nConvert a Kerberos id in cell B2 to entry number format:\n=CONCAT(CONCAT(20, MID(B2,4,2)), UPPER(LEFT(B2,3)), RIGHT(B2,4))\nIf Google Sheets, use CONCATENATE instead of CONCAT."
  },
  {
    "objectID": "iitd/student_orgs.html",
    "href": "iitd/student_orgs.html",
    "title": "Student bodies of IIT Delhi",
    "section": "",
    "text": "I. Institute Level\nStudent Affairs Council (SAC)\n\nAdministrative Members\n\nDirector\nDean of Students\nDeputy Directors\nDean, Academics & Associate Deans of Student Affairs\nTwo nominees of the Senate\nOne Housemaster\nAssistant Registrar (Student Affairs) or other Administrative Officer\nTwo Wardens\nImmediate past Dean of Students\nHead, Counseling Services\n\nStudent Representatives\n\nGeneral Secretary, Student Affairs\nDeputy General Secretary, Student Affairs\nGeneral Secretaries of student boards recognized by S.A.C\nGeneral Secretary of C.A.I.C\nImmediate past two General Secretaries, Student Affairs\nOne representative from each hostel (except the married students hostel)\nTwo representatives of the married students’ hostel\n\nOne each for apartments (IP & Nalanda) and A-type flats\n\nResearch Scholars Representatives (10)\n\nResiding inside campus (4)\nResiding outside campus (6)\n\nM.Tech. Representatives (2)\nM.Sc. Representative (1)\nP.G. Programs Representative (1) (DIIT, M.Des, MSR, MBA)\nDay Scholars Representative (1) (All UG/PG Students not residing in hostels)\nRepresentative Married Students’ Hostel 1 from ‘A’ type quarters\nRepresentative from Indradhanu\nSwD Representative (1) (All UG/PG)\nSecretaries of the committees set up by the S.A.C.\nImmediate past General Secretaries of the Boards recognized by the S.A.C.\nTwo representatives from CAIC\nWeb and Design Nominees\n\nThe General Secretary, S.A.C can nominate 1 Web and 1 Design Executive student member\n\n\n\nCo-curricular and Academic Interaction Council (CAIC) (non-functional website)\n\n\nII. Boards and Committees under SAC\nBoard for Hostel Management (BHM)\n\nPresident, B.H.M.\nAssociate Dean Hostel Management\nAll Wardens\nDeputy/Assistant Registrar (S.A.) or other administrative personnel\nGeneral Secretary, B.H.M.\nDeputy General Secretary, Maintenance Affairs\nDeputy General Secretary, Mess Affairs\nAll House Secretaries\nAll Mess Secretaries\nAll Maintenance Secretaries\nSecretaries, B.H.M.\nRepresentatives, B.H.M.\nImmediate past General Secretary, B.H.M. (permanent invitee)\n\nBoard for Student Welfare (BSW)\n\nPresident, B.S.W (Ex officio, Associate dean, Welfare)\nVice-President, B.S.W\nGeneral Secretary, B.S.W.\nDeputy General Secretary (Operations)\nDeputy General Secretary (Mentor)\nImmediate past President, B.S.W. (Ex officio, if the incumbent is still a faculty member)\nGeneral Secretary, S.A.C. (Ex officio)\nTwo elected representatives of each hostel (except Nalanda Hostel)\nMentorship Committee (MRC)\nFinance Secretary\nPublic Relation Secretary\nImmediate past General Secretary, B.S.W. (Ex officio, if the incumbent is still a bona fide student of the Institute)\nCounsellor\nAdvisers of S.C. /S.T. and foreign students\n\nBoard for Sports Activities (BSA)\n\nPresident, B.S.A.\nVice-President, B.S.A.\nGame/Club Presidents\nAll Institute Team Captains\nAll Institute Team Vice-Captains\nAll Club Secretaries\nAll Sports Officers\nHostel Sports Secretary\nGeneral Secretary, Sports\nDeputy General Secretary, Sports\nImmediate past General Secretary, Sports\nThe immediate past President, B.S.A. (permanent invitee)\n\nBoard for Recreational and Creative Activities (BRCA)\n\nPresident, B.R.C.A.\nGeneral Secretary, B.R.C.A.\nVice President, B.R.C.A.\nDy. General Secretary\nAssistant Registrar (Student Affairs)/other administrative officer\nPresidents of Activities\nSecretaries of Activities\n\nBoard for Student Publications (BSP)\n\nPresident, B.S.P.\nVice-President, B.S.P.\nGeneral Secretary, B.S.P.\nDy. General Secretary\nWeb Chief Editor (1)\nMedia Chief Editor (1)\nDesign Chief Editors (2)\nCreative Writing & Outreach Chief Editors (2 – one each for English and Hindi)\nJournalism Chief Editors (4)\nTechnical Editors (12)\nJournalists (18)\nGeneral Secretary, SAC\nImmediate past General Secretary, Board for Student Publications\nImmediate past President, B.S.P.\n\n\n\nIII. Hostel Level\nFor each hostel:\n\nHouse Secretary (1 post)\nMess Secretary (1 post)\nSports Secretary (1 post)\nCultural Secretary (1 post)\nMaintenance Secretary (1 post)\nOther Secretaries as per individual hostels’ HWC decision/past practice\nClass Representatives to HWC\nSecretary to SAC (1 post)\nRepresentative to BHM (1 post)\nRepresentative to BSW (2 posts)\nRepresentative to BRCA (each club 1 post)\nDance Club Representative\nDramatics Club Representative\nDebating Club Representative\nQuizzing Club Representative\nMusic Club Representative\nLiterary Club Representative\nFine Arts & Crafts Representative\nPhotography & Film Representative\nHindi Samiti Representative\nSPICMACAY Representative\nDesign Representative\nRepresentative to Indoor Sports Club (ISC) (1 post)\n\nCommittees under HWC:\n\nMess Committee\nCommon Room Committee\nHouse Honors Committee\nHouse Maintenance & Cleanliness Committee\nComputer Users Committee"
  },
  {
    "objectID": "iitd/wip_2024.html",
    "href": "iitd/wip_2024.html",
    "title": "Work in Progress Calendar (2024)",
    "section": "",
    "text": "Download here: wip.ics\n\n\n\n\n\n\nInstructions\n\n\n\n\n\nEasiest: Download it on a phone and tap on it.\nOtherwise, follow this link: https://support.google.com/calendar/answer/37118"
  },
  {
    "objectID": "iitd/wip_2024.html#section",
    "href": "iitd/wip_2024.html#section",
    "title": "Work in Progress Calendar (2024)",
    "section": "",
    "text": "Download here: wip.ics\n\n\n\n\n\n\nInstructions\n\n\n\n\n\nEasiest: Download it on a phone and tap on it.\nOtherwise, follow this link: https://support.google.com/calendar/answer/37118"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Akhil Abburu",
    "section": "",
    "text": "Hi!\nI am a PhD candidate at the Indian Institute of Technology Delhi. I work with Prof. Sumitava Mukherjee and Prof. Sumeet Agarwal.\nMy core research interest lies in judgment and decision making, understanding how people make the choices they do. My current work involves developing and rigorously comparing computational models (using MLE, Bayesian methods, etc.) to better understand phenomena like loss aversion and its variability. I’m also keenly interested in metascience, computational social science, and the intersection of human and artificial intelligence.\nEmail: akhil.abburu at hss.iitd.ac.in"
  },
  {
    "objectID": "links/2025-04.html",
    "href": "links/2025-04.html",
    "title": "2025-04",
    "section": "",
    "text": "[science] Inside arXiv—the Most Transformative Platform in All of Science\nThe story of Paul Ginsparg\n[food] Saffron, the World’s Most Expensive Spice, Is Now Grown in the U.S.\n[world] New Lives in the City: How Taleban have experienced life in Kabul\nTo be honest, every time I go with them, they pressure me to play and listen to music in the car. At first, I was resisting, but now I have given in, with the one condition that they turn it off when passing through security checkpoints because many other Taleban don’t like it, and it’s bad for a Taleb to be seen listening to it.\n[world] How a deep-cover KGB spy recruited his own son\nThe Americans irl\n[tech] Fintech founder charged with fraud after AI shopping app found to be powered by humans in the Philippines\n[space] Suni Williams running a marathon in space\n30 Hours in a Hurricane, on a Race With No Course - The New York Times\n[science] Do Insects Feel Pain? - The New Yorker\n[culture,tech] Chimes at Midnight - Asterisk Magazine\n[world] The far-left kidnapping plot that reads like a real-life thriller\n[education] Sweden brings more books and handwriting practice back to its tech-heavy schools\n[food] Robots Squeezing Lemons\nthink about the poor lemon squeezers\n[health] ‘We are not afraid of death’: how Denmark is changing the way we die\n[culture] The Alabama Landline That Keeps Ringing - Oxford American\n[art] Girl with a Pearl Earring | 108 Gigapixel | Mauritshuis | Hirox\nSuper high-res scan"
  },
  {
    "objectID": "links/index.html",
    "href": "links/index.html",
    "title": "Links",
    "section": "",
    "text": "2025-03\n\n\n2025-04\n\n\n2025-05\n\n\nNo matching items"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Akhil Abburu",
    "section": "",
    "text": "Fun\n\nLinks\nfront pages\npretty map\ncricket\n\n\n\nIITD\n\nAbstract booklet generator\nConvert Kerberos to entry number (and vice versa)\nAn unofficial guide to RSTA\nStudent bodies of IIT Delhi\nWi-Fi settings on Android 11+\nWork in Progress Calendar (2024)\nWork in Progress Calendar (2025)"
  },
  {
    "objectID": "projects/map.html",
    "href": "projects/map.html",
    "title": "pretty map",
    "section": "",
    "text": "Code\n# Create a pretty map using OpenStreetMap data\n# Adapted from: http://estebanmoro.org/post/2020-10-19-personal-art-map-with-r/\n# Date: 2020-10-26\n# Last rendered: 2025-03-31\n\n# Load required packages\nlibrary(osmdata)\nlibrary(sf)\nlibrary(ggplot2)\n\n# Get bounding box. Use Key:official_name from OSM for accurate details\nbbx &lt;- getbb(\"Hyderabad District\")\n\n# Define min/max coordinates for the map boundaries\nmin_lon &lt;- bbx[1, 1]\nmax_lon &lt;- bbx[1, 2]\nmin_lat &lt;- bbx[2, 1]\nmax_lat &lt;- bbx[2, 2]\n\n# Big roads\nhighways &lt;- bbx |&gt;\n  opq(timeout = 180) |&gt;\n  add_osm_feature(\n    key = \"highway\",\n    value = c(\n      \"motorway\", \"trunk\", \"primary\", \"secondary\", \"tertiary\",\n      \"motorway_link\", \"trunk_link\", \"primary_link\",\n      \"secondary_link\", \"tertiary_link\"\n    )\n  ) |&gt;\n  osmdata_sf()\n\n# Preview\nggplot() +\n  geom_sf(\n    data = highways$osm_lines,\n    aes(color = highway),\n    size = 0.4,\n    alpha = 0.65\n  ) +\n  theme_void()\n\n\n# Small roads\nstreets &lt;- bbx |&gt;\n  opq(timeout = 180) |&gt;\n  add_osm_feature(\n    key = \"highway\", \n    value = c(\n      \"residential\", \"living_street\", \"service\", \"unclassified\",\n      \"pedestrian\", \"footway\", \"track\", \"path\"\n    )\n  ) |&gt;\n  osmdata_sf()\n\n# Lotsa streets\nggplot() +\n  geom_sf(\n    data = streets$osm_lines,\n    aes(color = highway),\n    size = 0.4,\n    alpha = 0.65\n  ) +\n  theme_void()\n\ncolor_roads &lt;- rgb(0.42, 0.449, 0.488)\n\n# Create final map\nfinal_map &lt;- ggplot() +\n  geom_sf(\n    data = streets$osm_lines,\n    col = color_roads,\n    size = 0.4,\n    alpha = 0.65\n  ) +\n  geom_sf(\n    data = highways$osm_lines,\n    col = color_roads,\n    size = 0.6,\n    alpha = 0.8\n  ) +\n  coord_sf(\n    xlim = c(min_lon, max_lon),\n    ylim = c(min_lat, max_lat),\n    expand = FALSE\n  ) +\n  theme_void() +\n  theme(\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"#edddc3\")\n  )\n\n# Save the map\nggsave(\n  filename = here::here(\"projects/map/hyd.png\"),\n  plot = final_map,\n  width = 36, \n  height = 24, \n  units = \"cm\",\n  dpi = 500\n)\n\n\n\n\n\nHyderabad\n\n\n\n\n\nChanakya Puri\n\n\n\n\n\nKolkata"
  }
]